{:rename-macros {}, :renames {}, :use-macros {}, :excludes nil, :name minimal-cljs.core, :imports nil, :requires {cljsjs.three cljsjs.three}, :uses nil, :defs {init {:protocol-inline nil, :meta {:file "/Users/mikebelanger/.boot/cache/tmp/Users/mikebelanger/Downloads/minimal_cljs_master/iq/-grrwi1/minimal_cljs/core.cljs", :line 6, :column 7, :end-line 6, :end-column 11, :arglists (quote ([]))}, :name minimal-cljs.core/init, :variadic false, :file "/Users/mikebelanger/.boot/cache/tmp/Users/mikebelanger/Downloads/minimal_cljs_master/iq/-grrwi1/minimal_cljs/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render {:protocol-inline nil, :meta {:file "/Users/mikebelanger/.boot/cache/tmp/Users/mikebelanger/Downloads/minimal_cljs_master/iq/-grrwi1/minimal_cljs/core.cljs", :line 33, :column 11, :end-line 33, :end-column 17, :arglists (quote ([]))}, :name minimal-cljs.core/render, :variadic false, :file "/Users/mikebelanger/.boot/cache/tmp/Users/mikebelanger/Downloads/minimal_cljs_master/iq/-grrwi1/minimal_cljs/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, animate {:protocol-inline nil, :meta {:file "/Users/mikebelanger/.boot/cache/tmp/Users/mikebelanger/Downloads/minimal_cljs_master/iq/-grrwi1/minimal_cljs/core.cljs", :line 37, :column 11, :end-line 37, :end-column 18, :arglists (quote ([]))}, :name minimal-cljs.core/animate, :variadic false, :file "/Users/mikebelanger/.boot/cache/tmp/Users/mikebelanger/Downloads/minimal_cljs_master/iq/-grrwi1/minimal_cljs/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :doc nil}